[gd_scene load_steps=10 format=3 uid="uid://dxwiild0uuvug"]

[ext_resource type="Script" uid="uid://bvlmbdik8vhk4" path="res://stamina_bar.gd" id="1_wvy5o"]

[sub_resource type="ProceduralSkyMaterial" id="ProceduralSkyMaterial_kfcwk"]
sky_horizon_color = Color(0.66224277, 0.6717428, 0.6867428, 1)
ground_horizon_color = Color(0.66224277, 0.6717428, 0.6867428, 1)

[sub_resource type="Sky" id="Sky_wvy5o"]
sky_material = SubResource("ProceduralSkyMaterial_kfcwk")

[sub_resource type="Environment" id="Environment_d84xi"]
background_mode = 2
sky = SubResource("Sky_wvy5o")
tonemap_mode = 2
glow_enabled = true

[sub_resource type="PlaneMesh" id="PlaneMesh_kfcwk"]
size = Vector2(20, 20)

[sub_resource type="ConcavePolygonShape3D" id="ConcavePolygonShape3D_wvy5o"]
data = PackedVector3Array(10, 0, 10, -10, 0, 10, 10, 0, -10, -10, 0, 10, -10, 0, -10, 10, 0, -10)

[sub_resource type="GDScript" id="GDScript_kfcwk"]
script/source = "extends CharacterBody3D

class Character_stats:
	const MAX_STAMINA: int = 100
	const MAX_HEALTH: int = 100
	const JUMP_VELOCITY = 4.5
	const DEFAULT_SPEED = 5.0
	var speed = DEFAULT_SPEED
	var stamina: int = 100
	var health: int = 100
	
	func increment_stamina(change: int):
		stamina = clamp(stamina + change, 0, MAX_STAMINA)
		
	func increment_health(change: int):
		health = clamp(health + change, 0, MAX_HEALTH)
		
	func run(run_mod = 2):
		speed = DEFAULT_SPEED * run_mod
	
	func walk():
		speed = DEFAULT_SPEED
		
		
		
	
var player_stats = Character_stats.new()



@onready var neck := $Neck
@onready var camera := $Neck/Camera3D

func _unhandled_input(event: InputEvent) -> void:
	if event is InputEventMouseButton:
		Input.set_mouse_mode(Input.MOUSE_MODE_CAPTURED)
	elif event.is_action_pressed(\"ui_cancel\"):
		Input.set_mouse_mode(Input.MOUSE_MODE_VISIBLE)
	if Input.get_mouse_mode() == Input.MOUSE_MODE_CAPTURED:
		if event is InputEventMouseMotion:
			neck.rotate_y(-event.relative.x * 0.01)
			camera.rotate_x(-event.relative.y * 0.01)
			camera.rotation.x = clamp(camera.rotation.x, deg_to_rad(-70), deg_to_rad(60))

func _physics_process(delta: float) -> void:
	# Add the gravity.
	if not is_on_floor():
		velocity += get_gravity() * delta

	# Handle jump.
	if Input.is_action_just_pressed(\"ui_accept\") and is_on_floor():
		velocity.y = player_stats.JUMP_VELOCITY

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var input_dir := Input.get_vector(\"left\", \"right\", \"up\", \"down\")
	var direction = (neck.transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()
	if direction:
		velocity.x = direction.x * player_stats.SPEED * player_stats.run_mod
		velocity.z = direction.z * player_stats.SPEED * player_stats.run_mod
	else:
		velocity.x = move_toward(velocity.x, 0, player_stats.SPEED)
		velocity.z = move_toward(velocity.z, 0, player_stats.SPEED)

	move_and_slide()
	
func _input(event):
	if event.is_action_pressed(\"Run\"):
		RUN_MOD = 2
	elif event.is_action_released(\"Run\"):
		RUN_MOD = 1
		
"

[sub_resource type="CapsuleMesh" id="CapsuleMesh_d84xi"]

[sub_resource type="ConvexPolygonShape3D" id="ConvexPolygonShape3D_ra883"]
points = PackedVector3Array(-0.12520654, -0.532801, -0.4805069, 0.022783129, 0.4760704, 0.49888408, 0.16971254, 0.5591441, 0.46417162, 0.23105091, -0.8035912, 0.32045516, 0.40741014, 0.651043, -0.24352328, -0.4827893, 0.59484255, 0.082213186, -0.3628679, -0.68231165, 0.2896967, 0.46904355, -0.65452886, -0.06627126, -0.12744367, 0.8427015, -0.33810276, -0.39343542, -0.6839421, -0.24471663, 0.43825462, 0.62330925, 0.20084947, 0.0841477, 0.977454, 0.11479468, -0.06820232, -0.9764576, -0.12927033, 0.20054972, -0.56312895, -0.4514544, -0.18552664, 0.59545326, -0.4534751, -0.27336287, 0.59226835, 0.40775412, -0.0069364863, -0.47682306, 0.49966025, 0.37582088, -0.5886136, 0.31695515, 0.111579016, 0.5630594, -0.48117727, -0.41725034, 0.5278656, -0.27049688, -0.48454633, -0.59697217, -0.06650971, -0.27974695, 0.90856135, 0.05333608, -0.25019687, -0.8807117, 0.20531891, 0.263647, -0.90277094, -0.1273943, 0.29336792, 0.8715263, -0.15719566, 0.3734115, -0.5263189, -0.32824618, 0.4996626, 0.47664148, -0.0068885577, 0.053105574, 0.8750009, 0.32470253, -0.15454252, -0.5908538, 0.4658794, -0.09727988, -0.7823577, -0.39818847, -0.3876489, -0.49817133, 0.31564978, -0.30067965, -0.58799505, -0.38890144)

[node name="Node3D" type="Node3D"]

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_d84xi")

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="."]
transform = Transform3D(-0.8660254, -0.43301278, 0.25, 0, 0.49999997, 0.86602545, -0.50000006, 0.75, -0.43301266, 0, 0, 0)
shadow_enabled = true

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
mesh = SubResource("PlaneMesh_kfcwk")

[node name="StaticBody3D" type="StaticBody3D" parent="MeshInstance3D"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="MeshInstance3D/StaticBody3D"]
shape = SubResource("ConcavePolygonShape3D_wvy5o")

[node name="Player" type="CharacterBody3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.4623585, 0)
script = SubResource("GDScript_kfcwk")
RUN_MOD = null
stamina = null

[node name="Sprite" type="MeshInstance3D" parent="Player"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.34988332, 0)
mesh = SubResource("CapsuleMesh_d84xi")

[node name="CollisionShape3D" type="CollisionShape3D" parent="Player"]
shape = SubResource("ConvexPolygonShape3D_ra883")

[node name="Neck" type="Node3D" parent="Player"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.30743837, 0)

[node name="Camera3D" type="Camera3D" parent="Player/Neck"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -0.13911569)

[node name="Stamina bar" type="TextureProgressBar" parent="Player"]
offset_left = 448.0
offset_top = 744.0
offset_right = 696.0
offset_bottom = 771.0
script = ExtResource("1_wvy5o")
